<?xml version="1.0"?>

<launch>
    <arg name="map" default="$(find cleaner_robot)/maps/big_house2.yaml"/>
    <arg name="coverage_area_offset" default="-2.5 -2.5 0 0 0 0"/>
    <arg name="coverage_area_size_x" default="10"/>
    <arg name="coverage_area_size_y" default="10"/>
    <!--The x_vel has to be set such that coverage of tool radius is reached,
    x_acc really high as we want the setpoint to really just move with a constant speed
    , even in turns-->
    <arg name="target_x_vel" default="0.2"/>
    <arg name="target_x_acc" default="20"/>

    <!-- We want the turns to be as fast as possible, as coverage is limited by the long straigths-->
    <arg name="target_yaw_vel" default="10.00"/>
    <arg name="target_yaw_acc" default="100"/>
    <!-- Radius is sadly limited by door openings-->
    <arg name="robot_radius" default="0.2"/>
    <arg name="tool_radius" default="0.2"/>
    <arg name="rviz" default="true"/>

    <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
   <arg name="move_forward_only" default="false"/>

    <!-- Turtlebot3 -->
  <include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch">
    <arg name="model" value="$(arg model)" />
  </include>

    <!--Move base flex, using the full_coverage_path_planner-->
    <node pkg="mbf_costmap_nav" type="mbf_costmap_nav" respawn="false" name="move_base_flex" output="screen" required="true">
        <param name="tf_timeout" value="1.5"/>
        <rosparam file="$(find full_coverage_path_planner)/test/full_coverage_path_planner/param/planners.yaml" command="load" />
        <rosparam file="$(find full_coverage_path_planner)/test/full_coverage_path_planner/param/local_costmap_params.yaml" command="load" />
        <param name="SpiralSTC/robot_radius" value="$(arg robot_radius)"/>
        <param name="SpiralSTC/tool_radius" value="$(arg tool_radius)"/>
        <param name="global_costmap/robot_radius" value="$(arg robot_radius)"/>
        <remap from="odom" to="/odom"/>
        <remap from="scan" to="/scan"/>

        <remap from="/move_base_flex/SpiralSTC/plan" to="/move_base/SpiralSTC/plan"/>
        <remap from="/move_base_flex/tracking_pid/interpolator" to="/move_base/TrackingPidLocalPlanner/interpolator"/>
    </node>

    <!-- Move Base backwards compatibility -->
    <node pkg="mbf_costmap_nav" type="move_base_legacy_relay.py" name="move_base" >
        <param name="base_global_planner" value="SpiralSTC" />
    </node>

     <!-- AMCL -->
  <include file="$(find cleaner_robot)/launch/amcl_global.launch"/>


    <!--We need a map to fully cover-->
    <node name="grid_server" pkg="map_server" type="map_server" args="$(arg map)">
        <param name="frame_id" value="map"/>
    </node>

    <!--Tracking_pid cannot just accept a nav_msgs/Path, it can only go to a PoseStamped,
       so the path_interpolator drags a PoseStamped over a Path at a given speed-->
    <node name="interpolator" pkg="tracking_pid" type="path_interpolator">
        <param name="target_x_vel" value="$(arg target_x_vel)"/>
        <param name="target_x_acc" value="$(arg target_x_acc)"/>
        <param name="target_yaw_vel" value="$(arg target_yaw_vel)"/>
        <param name="target_yaw_acc" value="$(arg target_yaw_acc)"/>
        <remap from="path" to="/move_base/SpiralSTC/plan"/>
    </node>

    <!--Tracking_pid tries to get the robot as close to it's goal point as possible-->
    <node name="controller" pkg="tracking_pid" type="controller" output="screen">
        <remap from="move_base/cmd_vel" to="/cmd_vel"/>
        <remap from="local_trajectory" to="trajectory"/>
        <param name="controller_debug_enabled" value="True"/>
        <param name="track_base_link" value="true"/>
        <param name="l" value="0.2"/>
        <param name="Ki_long" value="0.0"/>
        <param name="Kp_long" value="1.0"/>
        <param name="Kd_long" value="0.5"/>
        <param name="Ki_lat" value="0.0"/>
        <param name="Kp_lat" value="2.0"/>
        <param name="Kd_lat" value="0.3"/>
        <param name="Kd_lat" value="0.3"/>
    </node>

    <!-- Launch coverage progress tracking -->
    <node pkg="tf" type="static_transform_publisher" name="map_to_coveragemap" args="$(arg coverage_area_offset) map coverage_map 100" />
    <node pkg="full_coverage_path_planner" type="coverage_progress" name="coverage_progress">
        <param name="~target_area/x" value="$(arg coverage_area_size_x)" />
        <param name="~target_area/y" value="$(arg coverage_area_size_y)" />
        <param name="~coverage_radius" value="$(arg tool_radius)" />
        <remap from="reset" to="coverage_progress/reset" />
        <param name="~map_frame" value="/coverage_map"/>
    </node>

    <!-- rviz -->
        <node if="$(eval rviz)" name="rviz" pkg="rviz" type="rviz" args="-d $(find cleaner_robot)/rviz/fcpp.rviz" />
</launch>
